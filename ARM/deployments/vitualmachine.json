{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "solutionprefix": {
            "type": "string",
            "metadata": {
                "description": "solution prefix"
            }
        },
        "subnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "subnet for vm"
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "automationaccount name"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "storageaccount name"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "name of secret saved to key vault name by new password script"
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "name of keyVault"
            }
        },
        "kekUri": {
            "type": "string",
            "metadata": {
                "description": "url of key encryption key"
            }
        },
        "dscFilename": {
            "type": "string",
            "metadata": {
                "description": "dsc conguration name"
            }
        }
    },
    "variables": {
        "nicName": "[tolower(concat(parameters('solutionprefix'),'-nic'))]",
        "privateIpAddress": "10.0.10.4",
        "vmName": "[tolower(parameters('solutionprefix'))]",
        "vmSize": "Standard_B1ms",
        "adminUserName": "unifi-admin",
        "vmImageSku": "2019-Datacenter",
        "kekUri": "[replace(parameters('kekUri'),':443','')]",
        "dscNodeConfigurationName": "[replace(parameters('dscFilename'),'.ps1','.localhost')]",
        "keyVaultResourceId": "[resourceId('Microsoft.Keyvault/vaults',parameters('keyVaultName'))]"
    },
    "resources": [
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "tags": {
                "displayName": "[parameters('solutionprefix')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[parameters('subnetResourceId')]"
                            },
                            "privateIPAddress": "[variables('privateIPAddress')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "tags": {
                "displayName": "[parameters('solutionprefix')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[variables('adminUserName')]",
                    "adminPassword": "[parameters('adminpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('vmImageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('solutionprefix'),'-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "name": "[concat(parameters('solutionprefix'),'-diagnostics')]",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "[parameters('solutionprefix')]"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "xmlCfg": "[base64('<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <Logs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Error\" /> <PerformanceCounters scheduledTransferPeriod=\"PT1M\"> <PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available MBytes\" sampleRate=\"PT1M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT1M\" /> </PerformanceCounters> </DiagnosticMonitorConfiguration> </WadCfg>')]",
                            "storageAccount": "[parameters('storageAccountName')]"
                        },
                        "protectedSettings": {
                            "storageAccountName": "[parameters('storageAccountName')]",
                            "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').key1]",
                            "storageAccountEndPoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints.blob]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[concat(variables('vmName'),'-antimalware')]",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'),'/extensions/',concat(parameters('solutionprefix'),'-diagnostics'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": "true",
                            "Exclusions": {
                            },
                            "RealtimeProtectionEnabled": "true",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        },
                        "protectedSettings": null
                    }
                },
                {
                    "name": "[concat(variables('vmName'),'-dsc')]",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2018-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'),'/extensions/',concat(parameters('solutionprefix'),'-antimalware'))]"
                    ],
                    "tags": {
                        "displayName": "[parameters('solutionprefix')]"
                    },
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.77",
                        "autoUpgradeMinorVersion": true,
                        "protectedSettings": {
                            "configurationArguments": {
                                "RegistrationKey": {
                                    "UserName": "PLACEHOLDER_DONOTUSE",
                                    "Password": "[listKeys(resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccountName')), '2018-06-30').Keys[0].value]"
                                }
                            }
                        },
                        "settings": {
                            "configurationArguments": {
                                "RegistrationUrl": "[reference(resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccountName')), '2018-06-30').registrationUrl]",
                                "NodeConfigurationName": "[variables('dscNodeConfigurationName')]",
                                "ConfigurationMode": "ApplyAndAutoCorrect",
                                "RefreshFrequencyMins": 30,
                                "ConfigurationModeFrequencyMins": 15,
                                "ActionAfterReboot": "ContinueConfiguration"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[concat(parameters('solutionprefix'),'-diskencryption')]",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'),'/extensions/',concat(parameters('solutionprefix'),'-dsc'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "2.2",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "1.0",
                        "settings": {
                            "EncryptionOperation": "EnableEncryption",
                            "KeyEncryptionAlgorithm": "RSA-OAEP",
                            "KeyVaultURL": "[reference(variables('keyVaultResourceId'),'2018-02-14').vaultUri]",
                            "KekVaultResourceId": "[variables('keyVaultResourceId')]",
                            "KeyEncryptionKeyURL": "[variables('kekUri')]",
                            "KeyVaultResourceId": "[variables('keyVaultResourceId')]",
                            "VolumeType": "All"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
    },
    "functions": [
    ]
}
